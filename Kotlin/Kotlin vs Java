코틀린으로 앱 개발시 자바보다 이점

표현력과 간결함
코틀린의 최신 언어 기법을 이용하면 훨씬 간결한 구문으로 프로그램을 작성할 수 있습니다.
같은 로직을 자바와 코틀린으로 각각 작성해 보면 코틀린의 코드가 훨씬 간결하다는 것을 알 수 있습니다.


안전한 코드(safer code)
코틀린은 널안정성을 제공합니다.
객체지향 프로그래밍에선느 객체는 널 상태일 수 있으며, 이때 런타임 오류인 널 포인트 예외(NullPointException)가 발생할 수 있습니다.
따라서 객체가 널인 상황을 고려해 개발해야 하는데, 코틀린에서는 변수를널 허용(Nullable)과 널 불허용(not null)으로 구분해서 선언합니다.
이로써 널과 관련된 여러 부분을 컴파일러가 해결해줍니다.


상호운용성(interoperable)
코틀린은 자바와 100% 호환합니다.
따라서 코틀린으로 프로그램을 작성할 때, 자바 클래스나 라이브러리를 얼마든지 활용할 수 있습니다.
코틀린 코드에서 자바 클래스를 이용할 수 있으며 반대로 자바코드에서 코틀린 클래스를 이용할 수 있습니다.
이뿐만 아니라 하나의 앱을 개발할 때 자바와 코틀린을 혼용해도 됩니다.
이미 자바로 개발한 앱을 유지,보수할 때 추가하는 코드만 코틀린으로 작성할 수도 있습니다.


구조화 동시성(structured concurrency) // 비동기 처리
코틀린 언어가 제공하는 코루틴(coroutiens)이라는 기법을 이용하면 비동기 프로그래밍을 간소화 할 수 있습니다.
네트워크 연동이나 데이터베이스 갱신과 같은 작업을 할 때 이용하면 프로그램을 조금 더 간단하게 그리고 효율적으로 작성 할 수 있습니다.

참고 : 깡샘의 안드로이드 앱 프로그래밍 with Kotlin